# -*- coding: utf-8 -*-
"""Model search engine.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qop2u80vLkwqB4PSAkx4biTaWnFOz-bT
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import os
import numpy as np
from collections import Counter
from nltk.tokenize import word_tokenize
import seaborn as sns
import matplotlib.pyplot as plt
# %matplotlib inline
from wordcloud import wordcloud
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer

"""# data goodreads_cleaning1"""

data = pd.read_json("/content/goodreads_cleaning1.json")

data.head(5)

data.info()

data.isnull().sum()

"""# search engine"""

from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer
vectorizer = TfidfVectorizer()

tfidf = vectorizer.fit_transform(data['bookTitle'])

from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
import re

query = 'mortal instruments'
processed = re.sub('[^a-zA-Z0-9 ]','',query.lower())
query_vec = vectorizer.transform([processed])

similarity = cosine_similarity(query_vec, tfidf).flatten()
similarity

indices = np.argsort(-similarity)
result = data.iloc[indices]
result.head(5)

data.keys()